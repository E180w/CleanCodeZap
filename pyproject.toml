[build-system]
requires = ["setuptools>=64", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "cleancodezap"
version = "1.0.0"
description = "A CLI tool for cleaning and optimizing code across multiple languages"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "CleanCodeZap Team", email = "team@cleancodezap.com"}
]
keywords = ["code", "cleanup", "optimization", "cli", "python", "javascript", "go"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Code Generators",
    "Topic :: Software Development :: Quality Assurance",
    "Topic :: Utilities",
]
requires-python = ">=3.7"
dependencies = [
    "click>=8.0.0",
    "autoflake>=1.4.0",
    "black>=22.0.0",
    "requests>=2.25.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0.0",
    "pytest-cov>=2.10.0",
    "flake8>=3.8.0",
    "mypy>=0.910",
    "pre-commit>=2.15.0",
]
test = [
    "pytest>=6.0.0",
    "pytest-cov>=2.10.0",
]

[project.urls]
Homepage = "https://github.com/E180w/CleanCodeZap"
Repository = "https://github.com/E180w/CleanCodeZap.git"
Issues = "https://github.com/E180w/CleanCodeZap/issues"
Changelog = "https://github.com/E180w/CleanCodeZap/blob/main/CHANGELOG.md"

[project.scripts]
cleancodezap = "cleancodezap.cli:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["cleancodezap*"]
exclude = ["tests*"]

[tool.black]
line-length = 100
target-version = ['py37', 'py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.coverage.run]
source = ["cleancodezap"]
omit = ["*/tests/*", "*/test_*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\bProtocol\):",
    "@(abc\.)?abstractmethod",
]

[tool.mypy]
python_version = "3.7"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[tool.flake8]
max-line-length = 100
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".eggs",
    "*.egg-info",
    ".venv",
    ".mypy_cache",
    ".pytest_cache"
] 